{
  "title": "Small Problems OOPÂ ",
  "cells": [
    {
      "type": "markdown",
      "data": "Easy_2: Pet_shelter, review this wasn't able to do this on my own, try again later\n\nEasy_2: moving,  review when to use modules and when to add a parent class.  I got this correct but still abit shakey on the knowledge \n\nEasy_2: nobility, review this, had to look at the solution, they used to_s trick which seems to be a trick to remember\n\nMedium_1: Circular queue: you should look at this again to make sure you under stand the logic. \n\nMedium_1: Number guessser_1 had a super interesting use of hashes\n\nMedium_1: Highest and Lowest Ranking cards you need to understand the `<=>` again\n\nMedium_1: Poker:  I wasn't able to do this in a timely manor so I looked at the code.  I understood everything should review and try again.  Undestood everthing other than the `<=>` sorting like in thamove example.  DIDN'T CODE ANYTHING FOR FURTHER EXPLORATION\n\nDebugging: Employeemanagment, I had some confusion on public, private and protected methods.  revisisted this section of launch school [Private, protected and public](https://launchschool.com/books/oo_ruby/read/inheritance#privateprotectedandpublic)\n\nDebugging: **Files** review this problem.  I was a bit shakey on self.class::CONSTANT  functioned. \n\nDebugging:   **sorting distances** it may be worth reviewing this again.  Was a bit shakey on why you needed to `include comparable module` bcause you would be comparing two integers.\n\nDebugging: **bank balance** you got this, probably good to have a second look to get a closer solution to the course solution. Further explanation:  Setter methods return the arguement passed into them.  If you mutate that arguement it will return the mutated version (I think)\n\n\nDebugging:  **Does it rock or not?** you really need to review this on and rescuing exceptions. You should also review the `===` method for case statements\n\n\n"
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}