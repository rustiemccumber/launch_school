{
  "title": "Problems to ReviewÂ ",
  "cells": [
    {
      "type": "markdown",
      "data": "###Small Problems Easy\n\n*list which could not be complete\n\n- review regex of Palindromic Strings (Part 2) (small_problems >> easy 3) DONE \n\n- review What century is that? (small_problems >> easy 4) NO \n\n- running totals (small_problems >> easy_4)\n\n- convert a string to a number (small_problems >> easy_4)\n\n- convert a string to a signed number (small_problems_easy_4)\n\n- After_midnight_p1 (easy_5, small problems)\n\n- after midnight_p1 (easy_5, small problems)\n\n- clean up the words (easy_5, small problems)\n\n- cute angles (easy_6, small problems) skipped this, was not able to solve\n\n- reversed arrays part 1 (easy_6, small problems) was able to do this, but review because they use multiple reassignment in an interesting way. \n\n- Swap_case: easy_7, small problems:  Review this for the use of regex and the method `=~`, otherwise this is easy. \n\n- staggered_caps_p1 and p2.  I solved p1 but p2 seemed to only with with one manor of solving the problem.  review both\n\n### Small Problems Medium \n- medium_1_ 1000 lights (2nd review0): I did better this time around. took about 40 minutes to complete but i belive i would have completed it in less, but I was hung up on a detail that was initially correct but I didn't look at the problem output close enough. REVIEW AGAIN\n\n- medium_1: diamonds: took much over an hour.  had to look at other code to get the problem.  (2nd review) figured out a way to do it but didn't write pseudo code very well, and lost track of time, i believe it was over 20 min\n\n- medium_1: Stack machine iterperatation:  was able to do the main problem in more or less the time required, but did not do the **Further Explaination**\n\n- medium_1: word to digit. (attempt 2) solved the problem in 15 minutes. could not do further exploration. \n\n****REVIW BEFORE TES***\n- medium_1: fibbonnaci Number.(last digit)FURTHER exploration.  On the 2nd attempt of the further exploration I did not get a solution, furthermore I did not understand the the other students solutions for this.\n\nI did however solve the first part of this very quickly.  But then i wrote the easy solution for this which takes forever to generate the last values, should go back and solve it the way that calculates it quickly.\n\n- medium_2: Longest Sentence. I solved this, used p rather than puts so it output the newline characters. looked at the solution to see how to do File.read(exampletext.rb). **Did not do further exploration**\n\n\n- medium_2: now i know my abcs.  Started the problem in generally the correct manner, looked at the solution. probably took more than 20 min. ATTEMPT 2, finished in 20 minutes\n\n***REVIEW CONCEPT BEFORE TEST***\n- medium_2: letter case percentage ratio:  the regex for string.count('/[^a-zA-Z]/') that i tried initially did not count correctly. WHY DOES THIS NOT WORK?? I had to look at the solution for how they used the regex\n\n- medium_2:  matching parenthesis:  in 45 min i got to a variation of this which functions. but mine was more complex and may have edge cases. did not do further exploration.  Attempt 2 was done in 10 minutes, i basically remembered the solution but created a variant of it. I did not do further exploration but know how to do it \n\n- medium_2: Tri-angles:  finished in 20 minutes.  you should review how to do case statements. attempt 2, finish in 10 minutes with using a case statement \n\n**REVIEW AFTER TEST***\n- medium_2 Unlucky days: I skipped this one. I skipped this on attempt 2, COME BACK TO THIS!\n\n- medium_2 Next featured number: higher than a given value.  This took me 1 hour, I was on the right track but there was a bug that stopped the program from working in all case. **try this again**. Finished in 18 minutes on attempt 2.  RETURN WILL SIMULATNEOUSLY RETURN THE VALUE AND BREAK OUT OF A LOOP  \n\n- medium_2 bubble sort:  This took me about 1 hour, I arrived at the correct answer.  Did not do the optimiztion for this. I arrived at the correct answer, in 18 minutes.  SKIPPED OPTIMIZATION. \n\n###Small Problems Advanced \n\n- advanced_1 Madlibs revisited:  I didn't have the method which they used but my method functioned, there was much cleaner. try again. MORE OR LESS GOT TO THE CORRECT ANSWER ON THIS, did not deal with when words are \n\n-advanced_1 Seeing stars: on attempt 2 i arrived at a solution in 22 minutes. Take more time to understand the solution of the launch school for this one. DID not do further exploration: DO NOT REVIEW\n\n**REVIEW AFTER TEST***\n- advanced_1 Transposed: the first solution took me 30 minutes, and it was more manual. The second solution was a bit more automated an took me about 30 min after looking at ls solution, and was very similar to launch school solution. FURTHER EXPLORATAION, AUTOMATE SOLUTION TO FURTHER EXPLORATION\n\n**REVIEW AFTER TEST***\n-advanced_1 merged Sorted list: Could not do skipped. COME BACK AND REDO THIS\n-COULD NOT SOLVE THIS ON THE SECOND ATTEMPT, TRY AGAIN!\n\n**REVIEW AFTER TEST***\n-advanced_1 did not do merge_short, come back to this\n\n**REVIEW AFTER TEST***\n-did not do egyptian fraction, return to this \n\n### CODEWARS\n\nCODEWARS minimize_sum_of_arrays\nsmall_problems >> codewars >> mimimize_sum_of _arrays. Actually this one is confusing, don't review. \n\nREVIEW: CODE wars delete a digit.  Could not get to the solution. Second time I finished in 18 minutes! DONE\n\nREVEIW: CODWARS simple simple simpile string expansions.  I did this in 18 minutes on the second attempt \n\nReview: CODEWARS mexican wave, got the answer, didn't time it super well, i believe it took over 30 minutes. didn't use pseudo code so well.  ATTEMPT 2 TOOK 19 minutes \n\nreview: codewars replace_with_alphabet position. got the answer but i belive it took longer than 30 min (just slightly longer). ATTEMPT 2, 17 minutes\n\n\n\n\n### Miscelanerous problems \n\nReview: FIND PRIMES: (can be found in Small_problems >> live_sessions >> find_primes\n\nReview: computer: (can be found in small_problems >> live_sessions >> computer \n\nReview: friday_13th((can be found in small_problems >> live_sessions >> computer\n\n"
    }
  ]
}