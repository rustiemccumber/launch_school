{
  "title": "Assement_101_Prep: Study Guide RB101",
  "cells": [
    {
      "type": "markdown",
      "data": "#### Study Guide RB101\n\nfor the written part of the Assesment you only need to know ruby basics exercises \n\nBe able to explain clearly the following topics:\n<details>\n  <summary>topics</summary>\n- local variable scope, especially how local variables interact with method invocations with blocks and method definitions\n\n- how passing an object into a method definition can or cannot permanently change the object\n\n- working with collections (Array, Hash, String), and popular collection methods (each, map, select, etc).  Review the two lessons on these topics thoroughly.\n\n- [variables as pointers](https://launchschool.com/books/ruby/read/more_stuff#variables_as_pointers)\n\n- [puts vs return](https://launchschool.com/books/ruby/read/methods#putsvsreturnthesequel)\n\n- false vs nil and the idea of \"truthiness\"\n\n- method definition and method invocation\n\n- implicit return value of method invocations and blocks\n\n</details>\n\nThese questions will test your knowledge on more than one level\n\n\n1. ability to parse code and decribe precisely, or knowledge of ruby language specifics\n\n3. understanding of underlying principle: either specific to ruby, or general cs\n\ndescribe codes such as below with great precision\n<details><summary>Code block</summary>\n  \n```ruby\ngreeting = 'Hello'\n\nloop do\n  greeting = 'Hi'\n  break\nend\n\nputs greeting\n``` \n</details>\n\n<details>\n<summary>Example Description</summary>\n<p>\n\nin line one the local variable ```greeting``` is initialized and assigned that string object variable with the value of ```'Hello'```.\n\nThe ```do..end``` incombination with the loop method invocation lines 3 to 6 defines a block. In this blook greeting is reassigned to String object 'Hi'. the puts method is called on line 8 with the local variable ```greeting``` passed to it. \n\nSince the ```greeting``` variable is now assigned to ```'hi'```, that is what is output. This is example illustrates local variable scoping rules in ruby, and variables within side the block have access to variables initialized outside the block.\n\n<p>\n</details>\n\n### Some specific defintions\n\nsome things are expected to be refered to by definition in a very clear\n\n#### *truthiness* \n\nthe distinction between the bollean true and truthy, and the bolean false and falsy should be made very clear. \n\n- use \"evaluates to true\" or \"is truthy\" when discussing an expression that evaluates to true in a boolean context.\n- do not use \"is ```true```\" or \"is equal to `true`\" unless specifically discussing the boolean `true`.\n\n\n<details><summary>example</summary>\n\n``` ruby\n\n    a = 'hello'\n    \n    if a \n      puts \"hello is truthy\"\n    else\n      puts \"hello is falsey\"\n      \n  ```\n  - local variable `a` evaluates to true in the conditional statement so \"Hello is truthy\" is output (correct)\n  - local variable `a` is truthy so \"Hello is truthy\" is output (correct).\n  </details>\n\n#### *Method definition and Method invocation*\n\nwhen discussing methods, especial interms of how blocks and methods interact with local variables explain in terms of method definition and method invocation. [review](https://launchschool.com/lessons/a0f3cd44/assignments/9e9e907c)\n\n#### *Integer*\n\nrefer to integer when identify a ruby object which represents a whole number. [NO BIGNUM FIXNUM](https://launchschool.com/lessons/c82cd406/assignments/1788c3a1)\n\n### Variables and Object mutability \n\n- [variable referenece and mutability of objects] https://launchschool.com/blog/references-and-mutability-in-ruby\n- [mutating and non mutating methods in ruby](https://launchschool.com/blog/mutating-and-non-mutating-methods)\n- [object passing in ruby (pass by reference/value)](https://launchschool.com/lessons/3ce27abc/assignments/cd8e4629)\n\n### Assesment Prep Videos\n-[Part 1](https://launchschool.com/blog/live-session-beginning-ruby)\n-[Part 2](https://launchschool.com/blog/live-session-beginning-ruby-part-2)\n-[Part 3](https://launchschool.com/blog/live-session-beginning-ruby-part-3)\n\n### Additional tips\n\n- [additional tips below](https://melissamanousos.com/ls-rb109-assessment-tips/)\n\n- It’s easy to be too verbose during this exam for fear of leaving something out. After attending the study group a few times, I adopted Srdjan’s suggestion. Start by covering what the output and return values of the code will be, then do a first-pass explanation of why. Don’t spend time outlining what happens on every line of the provided code. Instead simply identify the concept being demonstrated (reassignment, variable shadowing, etc.). You can always come back to flesh out your explanation if you have time.\n\n- Use 2 timers: one for the total duration of the test itself, and a second for each question. For the questions, I gave myself a 15-minute cushion so I would have time to double check my work at the end, then divided the remaining time by the number of questions. This way you can tell if you’re on pace to finish within the allotted time. When they say there are “about 20” questions, that can mean “more than”. (There were 23 questions on my assessment.) So don’t plan on having an exact number of minutes per question until you start the test (but know it will be roughly 6-7 minutes per question).\n \n- run code often \n\n### Review all blogs throughly\n\n- Srđan prepared a four-part [blog series](https://medium.com/how-i-started-learning-coding-from-scratch/advices-for-109-written-assessment-part-1-6f7fa821cf84) in which he reviews the core concepts covered in course RB101 that should be mastered prior to taking the assessment.\n\n- Dalibor wrote a [blog article](https://medium.com/launch-school/knowing-is-not-enough-you-need-tactics-too-how-to-be-prepared-for-launch-school-written-3f7b9c9cb08e) about his own strategy for success on Launch School's written assessments.\n\n- William also wrote an [article](https://medium.com/launch-school/preparing-for-my-first-launch-school-assessment-d0ea9aa69208) where he talks of his experience with both the exam and interview, and how best to prepare for them.\n\n- Juliette wrote a [blog article](https://jsinibardy.com/preparing-launch-school-109-written-assessment) about her own strategy for Launch School's written assessment preparation.\n\n-https://github.com/ryanschaul/101_programming_foundations/blob/master/assessment1_prep.md\n\n## Things to do \n\n- review lesson 3 practice questions (easy, medium, hard)\n\n## Helpful code website links\n\n- https://launchschool.com/posts/37d092f1  question on necessary detail breakdown \n- https://github.com/ryanschaul/101_programming_foundations/blob/master/assessment1_prep.md  (assesment prep break down questions) \n- ankiweb\n  - https://apps.ankiweb.net/\n  - http://augmentingcognition.com/ltm.html\n- learning how to learn materials\n  - look into \"mind mapping\" instead of not taking\n  - Learning How To Learn     (https://www.coursera.org/learn/learning-how-to-learn)\nDeep Work (https://www.calnewport.com/books/deep-work/)\nThe Art of Learning (https://www.amazon.com/Art-Learning-Journey-Optimal-Performance/dp/0743277465)\n\n-kj\n\n-thread on note taking\nhttps://launchschool.com/posts/354c6b99\n\n"
    }
  ]
}