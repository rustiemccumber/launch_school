{
  "title": "RB 109 Interivew Assignment Notes",
  "cells": [
    {
      "type": "markdown",
      "data": "\nFIND THE DIFFERENCE BETWEEN PUTS, P and PRINT.  PAY attention when debugging where if you use PUTS if its return value of nil is affecting your program\n\nStart training the PEDAC approach with each problem:  [PEDAC template](https://gist.github.com/Cadowyn/a8b78f9682d026348dc5c0aa7e01eded)\n\n\n[Gooi Ying Chyi Blog Post](https://medium.com/launch-school/on-launchschool-interview-assessments-926797cbaa81) \n\n- Practice with other students\n\n###Explore the the problem \n\n- start in IRB making intial assumptions about the problem, testing edge cases and asking questions about the problem \n- One you have a strong grasp of the problem implementing a solution will seem much easier \n\n###Dealing with mistakes you haven't made before\n\n- when you run into output errors take a step back\n- instead of running all test cases maybe run one\n- place some `p somethings` within you code to output some values.\n- Actions above can helop you see where you code broke and determine why some values don't return as expected.\n\n### when you get stuck\n\nfor example if you don't know how to access the values within a nested hash \n\n```ruby\ncomputers = {\n  dell1: { name: 'Dell A', price: 100 },\n  hp1:   { name: 'HP B',   price: 200 },\n  asus1: { name: 'Asus C', price: 300 },\n  #...\n} # Example of nested hashes\ncomputers.select do |computer, hsh|\n  # stuck: how can I access the price value within the nested hash?\nend\n```\ntry accessing values manually in irb \n\n\n### systematic approach to solving a problem \n\n- Writing pseudo-code (or saying out loud)\n- Playing around with irb\n  + insights to solutions can come up after playing around in irb, additionally you may expose mistakes which you may not have seen otherwise \n- Testing out the edge cases\n- Solving the problem with irb\n- Outputting every single line of code\n- Asking yourself questions\n- Asking the interviewer clarifying questions\n- Taking a step back to figure out where the code break\n\n## [How to prepare for getting stuck on a launch school interview assignment](https://medium.com/launch-school/how-to-prepare-for-getting-stuck-on-a-launch-school-interview-assessment-6bba96672d44) \n\n- practive doesn't make perfect, perfect practice makes perfect. \n- \n- Practice under game like conditions.\n  + do zoom interviews with other students\n\n- Go through the PEDAC process and speak outloud as you solve problems. \n\n## [How I Prepared for Launch Schoolâ€™s 109 Oral Assessment](https://medium.com/launch-school/how-i-prepared-for-launch-schools-109-oral-assessment-81b2ff70efe9)\n\n- [use these katas on code wars](https://jsinibardy.com/codewars-kata-launch-school-109-oral-assessment)\n- [STUDY HABITS](https://medium.com/launch-school/my-study-habits-ae5c778b5a14)\n\n## ASSESMENT PREP VIDEOS \n\n<details><summary>Part 4 - Derick does a few\nexercises- [ ] </summary>\n1. Print out something\n2. print out the products\n3. print out each element in PRODUCTS\n4. print out element that are less than 350 in price\n5. start to incorporate the query citeria \n\nBREAK THE PROBLEM INTO SMALL PIECES \n\n</details>\n\n<details><summary>Part 5 - Conrad does a few exercises- [ ] </summary>\n\n</details>\n\n<details><summary>Part 6 - Debugging- [ ]</summary>\n### personal\n\n- temperament\n- code with intention\n- fanatical attention to detail\n\n### General Approach\n\n- reproduce the error consistently\n- figure out a solution\n- pay attention to \"code smells\"\n\n### Tools\n\n- puts vs print vs puts\n  + use p instead of puts when working with data structures because it will print arrays and empty arrays []\n- paying attention to return val vs output, and terminal vs irb\n- pry\n- rubber duck\n- walk away for a bit after loading the problem in your head\n- debugger \n\n### Coding tips\n\n*methods*\n\n- extract to method\n- consistent naming scheme of methods\n- \n\n</details>\n\n<details><summary>Part 1- [ ]</summary>\n\n</details>\n\n<details><summary>Part 2- [ ]</summary>\n\n</details>\n\n<details><summary>Part 3- [ ]</summary>\n\n</details>\n\n<details><summary>Part 4- [ ] </summary>\n\n</details>\n\n<details><summary>SMALL PROBLEMS FOR REVIEW</summary>\n\n"
    }
  ]
}