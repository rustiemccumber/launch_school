{
  "title": "RB 109 Interivew Assignment Notes",
  "cells": [
    {
      "type": "markdown",
      "data": "\nFIND THE DIFFERENCE BETWEEN PUTS, P and PRINT.  PAY attention when debugging where if you use PUTS if its return value of nil is affecting your program\n\nStart training the PEDAC approach with each problem:  [PEDAC template](https://gist.github.com/Cadowyn/a8b78f9682d026348dc5c0aa7e01eded)\n\n\n[Gooi Ying Chyi Blog Post](https://medium.com/launch-school/on-launchschool-interview-assessments-926797cbaa81) \n\n- Practice with other students\n\n###Explore the the problem \n\n- start in IRB making intial assumptions about the problem, testing edge cases and asking questions about the problem \n- One you have a strong grasp of the problem implementing a solution will seem much easier \n\n###Dealing with mistakes you haven't made before\n\n- when you run into output errors take a step back\n- instead of running all test cases maybe run one\n- place some `p somethings` within you code to output some values.\n- Actions above can helop you see where you code broke and determine why some values don't return as expected.\n\n### when you get stuck\n\nfor example if you don't know how to access the values within a nested hash \n\n```ruby\ncomputers = {\n  dell1: { name: 'Dell A', price: 100 },\n  hp1:   { name: 'HP B',   price: 200 },\n  asus1: { name: 'Asus C', price: 300 },\n  #...\n} # Example of nested hashes\ncomputers.select do |computer, hsh|\n  # stuck: how can I access the price value within the nested hash?\nend\n```\ntry accessing values manually in irb \n\n\n### systematic approach to solving a problem \n\n- Writing pseudo-code (or saying out loud)\n- Playing around with irb\n  + insights to solutions can come up after playing around in irb, additionally you may expose mistakes which you may not have seen otherwise \n- Testing out the edge cases\n- Solving the problem with irb\n- Outputting every single line of code\n- Asking yourself questions\n- Asking the interviewer clarifying questions\n- Taking a step back to figure out where the code break\n\n## [How to prepare for getting stuck on a launch school interview assignment](https://medium.com/launch-school/how-to-prepare-for-getting-stuck-on-a-launch-school-interview-assessment-6bba96672d44) \n\n- practive doesn't make perfect, perfect practice makes perfect. \n- \n- Practice under game like conditions.\n  + do zoom interviews with other students\n\n- Go through the PEDAC process and speak outloud as you solve problems. \n\n## [How I Prepared for Launch Schoolâ€™s 109 Oral Assessment](https://medium.com/launch-school/how-i-prepared-for-launch-schools-109-oral-assessment-81b2ff70efe9)\n\n- [use these katas on code wars](https://jsinibardy.com/codewars-kata-launch-school-109-oral-assessment)\n- [STUDY HABITS](https://medium.com/launch-school/my-study-habits-ae5c778b5a14)\n\n## ASSESMENT PREP VIDEOS \n\n<details><summary>Part 4 - Derick does a few\nexercises- [ ] </summary>\n1. Print out something\n2. print out the products\n3. print out each element in PRODUCTS\n4. print out element that are less than 350 in price\n5. start to incorporate the query citeria \n\nBREAK THE PROBLEM INTO SMALL PIECES \n\n</details>\n\n<details><summary>Part 5 - Conrad does a few exercises- [ ] </summary>\n\n</details>\n\n<details><summary>Part 6 - Debugging- [ ]</summary>\n### personal\n\n- temperament\n- code with intention\n- fanatical attention to detail\n\n### General Approach\n\n- reproduce the error consistently\n- figure out a solution\n- pay attention to \"code smells\"\n\n### Tools\n\n- puts vs print vs puts\n  + use p instead of puts when working with data structures because it will print arrays and empty arrays []\n- paying attention to return val vs output, and terminal vs irb\n- pry\n- rubber duck\n- walk away for a bit after loading the problem in your head\n- debugger \n\n### Coding tips\n\n*methods*\n\n- extract to method\n- consistent naming scheme of methods\n- \n\n</details>\n\n<details><summary>Part 1- [ ]</summary>\n\n</details>\n\n<details><summary>Part 2- [ ]</summary>\n\n</details>\n\n<details><summary>Part 3- [ ]</summary>\n\n</details>\n\n<details><summary>Part 4- [ ] </summary>\n\n</details>\n\n<details><summary>SMALL PROBLEMS FOR REVIEW</summary>\n\n### small problem list not completed in 20 min\n\n- medium_1: Rotation(P2) *didn't do psuedo code very well with this, additionally took more than 20, 25*\n\n- medium_1: 1000_lights *didn't get far on this on at all. took me over an hour to complete and had to method hunt for `step`\n\n- medium_1: diamonds: took much over an hour.  had to look at other code to get the problem \n\n- medium_1: Stack machine iterperatation:  was able to do the main problem in more or less the time required, but did not do the **Further Explaination**\n\n- medium_1: word to digit.  I could solve this in 20 minutes but neglecting the punctations. I didn't solve *Further Explaination*.  Go back an retry with punctuation \n\n- mediumt_1: fibonacci numbers (recursive) completed the exercise in the time, need to read articles.  read articles listed https://launchschool.com/exercises/83e16900\n\n- medium_2: Longest Sentence.  I have to look at the answer for this, took about two hours and didn't come up with an answer. **Did not do further exploration**\n\n- medium_2: now i know my abcs.  Started the problem in generally the correct manner, looked at the solution. probably took more than 20 min. \n\n- medium_2: lower case percentage ratio:  was headining in the correct direction, but it didn't work. redo this.  Didn't do the further exploration\n\n- medium_2:  matching parenthesis:  in 45 min i got to a variation of this which functions. but mine was more complex and may have edge cases. did not do further exploration \n\n- medium_2: Triangle sides: finished in 30 minutes. answer is good \n\n- medium_2: Tri-angles:  finished in 20 minutes.  you should review how to do case statements. \n\n- medium_2 Unlucky days: I skipped this one.\n\n- medium_2 Next featured number: higher than a given value.  This took me 1 hour, I was on the right track but there was a bug that stopped the program from working in all case. **try this again**\n\n- medium_2 bubble sort:  This took me about 1 hour, I arrived at the correct answer.  Did not do the optimiztion for this. \n\n- advanced_1 Madlibs revisited:  I didn't have the method which they used but my method functioned, there was much cleaner. try again.\n\n-advanced_1 Seeing stars:  arrived at the center a solution.  Take more time to understand the solution of the launch school for this one. \n\n- advanced_1 Transposed: the first solution took me 30 minutes, and it was more manual. The second solution was a bit more automated an took me about 30 min after looking at ls solution, and was very similar to launch school solution. FURTHER EXPLORATAION, AUTOMATE SOLUTION TO FURTHER EXPLORATION\n\n-advanced_1 merged Sorted list: Could not do skipped. COME BACK AND REDO THIS\n-CURRENT PROBLEM MERGE SORT\n\n\n</details>\n\n<details><summary>OTHER PROBLEMS TO REVIEW</summary>\n\nReview: FIND PRIMES: (can be found in Small_problems >> live_sessions >> find_primes\n\nReview: computer: (can be found in small_problems >> live_sessions >> computer \n\nReview: friday_13th((can be found in small_problems >> live_sessions >> computer\n\nREVIEW: CODEWARS minimize_sum_of_arrays\nsmall_problems >> codewars >> mimimize_sum_of _arrays\n\nREVIEW: CODE wars delete a digit.  Could not get to the solution. \n\nREVEIW: CODWARS simple simple simpile string expansions\n\nReview: CODEWARS mexican wave, got the answer, didn't timeit super well, i believe it took over 30 minutes. didn't use pseudo code so well.\n\nreview: codewars replace_with_alphabet position. got the answer but i belive it took longer than 30 min (just slightly longer)\n\n\n</details>\n\n\n### GO through small exercises second time\n\n*list which could not be complete\n\n- review regex of Palindromic Strings (Part 2) (small_problems >> easy 3)\n\n- review What century is that? (small_problems >> easy 4)\n\n- running totals (small_problems >> easy_4)\n\n- convert a string to a number (small_problems >> easy_4)\n\n- convert a string to a signed number (small_problems_easy_4)\n- \n- After_midnight_p1 (easy_5, small problems)\n\n- after midnight_p1 (easy_5, small problems)\n\n- clean up the words (easy_5, small problems)\n\n- cute angles (easy_6, small problems) skipped this, was not able to solve\n\n- reversed arrays part 1 (easy_6, small problems) was able to do this, but review because they use multiple reassignment in an interesting way. \n\n- Swap_case: easy_7, small problems:  Review this for the use of regex and the method `=~`, otherwise this is easy. \n\n- staggered_caps_p1 and p2.  I solved p1 but p2 seemed to only with with one manor of solving the problem.  review both"
    }
  ]
}