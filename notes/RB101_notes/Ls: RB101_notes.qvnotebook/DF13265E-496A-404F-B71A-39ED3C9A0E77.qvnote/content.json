{
  "title": "Problems for live study session ",
  "cells": [
    {
      "type": "markdown",
      "data": "<details><summary>CODEWARS: delete a digit 6 kyu </summary>\n\n```ruby\n#Given an integer n, find the maximal number\n# you can obtain by deleting exactly one digit \n# of the given number.\n\n# Example\n# For n = 152, the output should be 52;\n\n# For n = 1001, the output should be 101.\n\n# Constraints: 10 ≤ n ≤ 1000000.\n```\nANSWER\n```\n=begin \n\n- Input: integer\n- Output: integer\n  + which is the max integer that exists by deleting on digit\n\n-problem domain: 10 ≤ n ≤ 1000000.\n\n- convert the integer into a string\n\n- intitialize an empty array\n\ncreate a loop \nsplit the string into an array of chars within the loop \nthat deletes the current character, joins the array and pushes \nthe joined array to an empty array\nmax_by on the array\n\n=end \n\ndef max_delete(n)\n\n  array = []\n  idx = 0\n\n  n.to_s.chars.each_with_index do |_char, idx| \n     \n     array_chars = n.to_s.chars\n     array_chars.delete_at(idx)\n     array << array_chars.join.to_i\n\n  end \n  array.max\nend \n\n\np max_delete(152)\n\np max_delete(1001)\n```\n\n</details>\n\n- CODEWARS: [Simple Simple Simple string expansion](https://www.codewars.com/kata/5ae326342f8cbc72220000d2) \n- CODEWARS: [mexican wave](https://www.codewars.com/kata/58f5c63f1e26ecda7e000029)\n- CODEWARS: [replace with alphabet position](https://www.codewars.com/kata/546f922b54af40e1e90001da)\n\n<details><summary> Alphabetized </summary>\n\n```\n#The alphabetized kata\n#Re-order the characters of a string, so that \n#they are concatenated into a new string in \n#\"case-insensitively-alphabetical-order-of-appe#arance\" \n#order. Whitespace and punctuation shall simply #be removed!\n\n#The input is restricted to contain no numerals #and \n#only words containing the english alphabet #letters.\n\n#Example:\n\n#alphabetized(\"The Holy Bible\") # \"BbeehHilloTy\"\n```\nANSWER\n\n```\n- INPUT: string\n# - OUTPUT: string with all the letters alphabetized and whitespaces remove\n\n\n# -problem domain: whitespace remove, case insesntive, only alphabtt letters\n\n# - implicit requirements:\n\n# - clarifying questions:\n\n# - edge cases\n\n# Algorithm:\n\n# split into an array \n# sort the array \n# join into a string\n# remove white spaces \n\n# EXAMPLES: \n\n#  alphabetized(\"The Holy Bible\") # \"BbeehHilloTy\" \n\n\n\n# def alphabetized(string)\n\n#   array = string.split('')\n\n#   sorted_array = array.sort_by {|char| char.downcase}\n\n#   sorted_array.join.delete(\"\\s\")\n\n# end\n\n# p alphabetized(\"The Holy Bible\") # \"BbeehHilloTy\"\n\n```\n\n</details>\n\n- lower_case_to_number (launch_school >> preparation_109)\n\n<details><summary>mating_pairs (preparation 109)</summary>\n\n```\n# In order to prove it's success and gain funding,\n# the wilderness zoo needs to prove to environmentalists\n# that it has a given integer number of mating pairs of bears.\n#\n# You must check within string to find all of the mating\n# pairs, and return a string containing only them.\n# Line them up for inspection.\n#\n# Rules: Bears are either 'B' (male) or '8' (female),\n# Bears must be together in male/female pairs 'B8' or '8B',\n# Mating pairs must involve two distinct bears each\n# ('B8B' may look fun, but does not count as two pairs).\n#\n# Return an array containing a string of only the mating\n# pairs available and `true` if the number is more\n# than or equal to the given integer, `false` if not:\n# \n# bears(6, 'EvHB8KN8ik8BiyxfeyKBmiCMj') ---> ['B88B', false]\n# bears(1, 'EvHaKNikiyxfey') ---> ['', false]\n# bears(5, \"il88B8gBB8B888fB88BB\") ---> ['8BB8B8B88B', true]\n# bears(6, \"EvHB8BKN8ikB8B8iyxfeyKBmiCMj\") ---> [\"B8B8B8\", false]\n```\nANSWER\n\n```\nAlgorithm:\n\n- Initialize a variable and have it point to an empty string\n\n- split the string up into chars\n\n- iterate through the array, if the current value is H and the next value \nis 8 add to the string add current value and next to the string \n- skip the next value if the current value is 8 and the next value is B append \nboth to the string and skip the next value\n\n=end \nrequire 'pry'\nrequire 'pry-byebug'\n\ndef bears(int, string)\n\n\n  idx = 0\n  array = string.chars\n  return_string = \"\"\n\n  loop do \n    if (array[idx] == \"B\") && (array[idx + 1] == \"8\")\n      return_string << (array[idx] + array[idx + 1])\n      idx += 1\n    elsif (array[idx] == \"8\") && (array[idx + 1] == \"B\")\n      return_string << (array[idx] + array[idx + 1])\n      idx += 1\n    end \n    idx += 1\n    break if idx == (array.size - 2)\n  end \n\n  return_string \n  \nend \n\np bears(5, \"il88B8gBB8B888fB88BB\") #---> ['8BB8B8B88B', true]\n```\n\n</details>\n\n- sum_consecutives (preparation_109)\n- rustie_19_12_incomplete.rb  8_bytes (preparation 109)\n- jason_19_12.rb find the item which doesn't match (preparation_109)\n- find_prime_multiply (preparation) \n"
    }
  ]
}